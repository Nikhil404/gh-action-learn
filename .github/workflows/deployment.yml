name: Deploy Project FrontEnd
on: 
  workflow_dispatch:
  push:
    branches:
      - main
      - 'dev/**'
      - 'feature/**'
      - 'release/**'
    paths-ignore:
      - '.github/workflows/**'
  

jobs:
  lint:
      runs-on: ubuntu-latest
      defaults:
        run:
          working-directory: ./frontend
      steps: 
        - name: Get code
          uses: actions/checkout@v3
        - name: Cache dependencies
          uses: actions/cache@v3
          with:
            path: ~/.npm
            key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
        - name: Install dependencies
          run: |
            npm install
            npm ci
        - name: Lint
          run: npm run lint
  test:
      needs: lint
      runs-on: ubuntu-latest
      defaults:
        run:
          working-directory: ./frontend
      steps:
        - name: Get Code
          uses: actions/checkout@v3
        - name: Install NodeJs
          uses: actions/setup-node@v3
          with:
            node-version: 18
        - name: Cache dependencies
          uses: actions/cache@v3
          with:
            path: ~/.npm
            key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
        - name: Install Dependencies
          run: |
            npm install
            npm ci
        - name: Run Tests
          run: npm test
  build: 
      needs: test
      runs-on: ubuntu-latest
      defaults:
        run:
          working-directory: ./frontend
      outputs:
        script-file: ${{ steps.publish-js.outputs.script-file }}
      steps:
        - name: Get Code
          uses: actions/checkout@v3
        - name: Install NodeJs
          uses: actions/setup-node@v3
          with:
            node-version: 18
        - name: Cache dependencies
          uses: actions/cache@v3
          with:
            path: ~/.npm
            key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
        - name: Install Dependencies
          run: |
            npm install
            npm ci
        - name: Build Project
          run: npm run build
        - name: Publish Js filename
          id: publish-js
          run: find dist/assets/*.js -type f -execdir echo 'script-file={}' >> $GITHUB_OUTPUT ';'
        - name: Upload artifact
          uses: actions/upload-artifact@v3
          with:
            name: dist-files
            path: ./frontend/dist
  deploy:
      needs: build
      runs-on: ubuntu-latest
      steps:
        - name: Get build artifacts
          uses: actions/download-artifact@v3
          with:
            name: dist-files
        - name: Output contents
          run: ls
        - name: Output filename
          run: echo "${{ needs.build.outputs.script-file }}"
        - name: Deploy to github pages
          run: echo "Deploying to github pages ..."
  report:
      needs: [lint, test, build, deploy]
      if: failure()
      runs-on: ubuntu-latest
      steps:
          - name: Output information
            run: |
              echo "Something went wrong!"
              echo "${{ github }}"