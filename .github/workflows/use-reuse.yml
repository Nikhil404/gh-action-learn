name: Using Reusable Workflow
on: 
  workflow_dispatch:
  push:
    branches:
      - main
      - 'dev/**'
      - 'feature/**'
      - 'release/**'
    paths-ignore:
      - '.github/workflows/**'
  
jobs:
  lint:
      runs-on: ubuntu-latest
      defaults:
        run:
          working-directory: ./frontend
      steps: 
        - name: Get code
          uses: actions/checkout@v3
        - name: Cache dependencies
          id: cache-dependencies
          uses: actions/cache@v3
          with:
            path: node_modules
            key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
        - name: Install Dependencies
          if: steps.cache-dependencies.outputs.cache-hit != 'true'
          run: |
            npm install
            npm ci
        - name: Lint
          run: npm run lint
  test:
    runs-on: ubuntu-latest
    defaults:
        run:
          working-directory: ./frontend
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Cache dependencies
        id: cache-dependencies
        uses: actions/cache@v3
        with:
            path: node_modules
            key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install Dependencies
        if: steps.cache-dependencies.outputs.cache-hit != 'true'
        run: |
            npm install
            npm ci
      - name: Test code
        continue-on-error: true
        id: run-tests
        run: npm run test
      - name: Upload test report
        uses: actions/upload-artifact@v3
        with:
          name: test-report
          path: test.json
  build:
    needs: test
    runs-on: ubuntu-latest
    defaults:
        run:
          working-directory: ./frontend
    outputs:
        script-file: ${{ steps.publish-js.outputs.script-file }}
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Cache dependencies
        id: cache-dependencies
        uses: actions/cache@v3
        with:
            path: node_modules
            key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install Dependencies
        if: steps.cache-dependencies.outputs.cache-hit != 'true'
        run: |
            npm install
            npm ci
      - name: Build website
        id: build-website
        run: npm run build
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: dist-files
          path: dist
  deploy:
    needs: build
    uses: ./.github/workflows/reusable.yml
  report:
      needs: [lint, test, build, deploy]
      if: failure()
      runs-on: ubuntu-latest
      steps:
          - name: Output information
            run: |
              echo "Something went wrong!"
              echo "${{ toJson(github) }}"
